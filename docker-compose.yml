version: '3.8'

networks:
  elk:
    driver: bridge

services:

  db:
    container_name: mysql
    build:
      context: ./database
      dockerfile: Dockerfile
    ports:
      - '3306:3306'
    volumes:
      - mysql_data:/var/lib/mysql
    restart: unless-stopped

  redis:
    image: redis:latest
    container_name: redis
    ports:
      - '6379:6379'
    volumes:
      - redis_data:/data
    restart: unless-stopped

  elasticsearch:
    container_name: elasticsearch

    #elasticsearch는 8버전부터 보안설정이 달라짐
    image: elasticsearch:7.17.16
    ports:
      - 9200:9200
      - 9300:9300

    #현재 위치에서 elasticsearch 디렉터리 볼륨마운트
    volumes:
      - ./server-monitoring/elasticsearch:/usr/share/elasticsearch/data
    environment:
      discovery.type: single-node

      #시큐리티 on
      xpack.security.enabled: true

      #ssl on
      xpack.security.transport.ssl.enabled: true

      #FE서버 CORS 허용
      http.cors.allow-origin: "*"
      http.cors.enabled: true
      http.cors.allow-credentials: true
      http.cors.allow-methods: OPTIONS, HEAD, GET, POST, PUT, DELETE
      http.cors.allow-headers: X-Requested-With, X-Auth-Token, Content-Type, Content-Length, Authorization, Access-Control-Allow-Headers, Accept, x-elastic-client-meta
      
      #username은 변경 불가
      #password는 5자 이상
      ELASTIC_USERNAME: "elastic"
      ELASTIC_PASSWORD: "elastic123!@#"
    networks:
      - elk
    restart: unless-stopped

  logstash:
    container_name: logstash
    image: docker.elastic.co/logstash/logstash:7.17.16
    ports:
      - 5000:5000
      - 9600:9600
    volumes:
      - ./server-monitoring/logstash/pipeline/logstash.conf:/usr/share/logstash/pipeline/logstash.conf
    depends_on:
      - elasticsearch
    networks:
      - elk
    restart: unless-stopped

  kibana:
    container_name: kibana
    image: kibana:7.17.16
    ports:
      - 5601:5601
    depends_on:
      - elasticsearch
    volumes:
      - ./server-monitoring/kibana/config/kibana.yml:/usr/share/kibana/config/kibana.yml
    networks:
      - elk
    restart: unless-stopped

volumes:
  mysql_data:
    driver: local
  redis_data:
    driver: local
