version: '3.8'

networks:
  kafka-network:
    driver: bridge

services:

  # zookeeper:
  #   container_name: zookeeper
  #   image: wurstmeister/zookeeper
  #   ports:
  #     - 2181:2181
  #   environment:  
  #     ZOOKEEPER_CLIENT_PORT: '2181'
  #     ALLOW_ANONYMOUS_LOGIN: 'yes'
  #   restart: unless-stopped
  #   networks:
  #     - kafka-network

  zk1:
    container_name: zookeeper1
    image: wurstmeister/zookeeper:latest
    restart: always
    hostname: zk1
    ports:
      - "2181:2181"
    environment:
      ZOO_MY_ID: 1
      ZOO_SERVERS: server.1=zk1:2888:3888;2181 server.2=zk2:2888:3888;2181 server.3=zk3:2888:3888;2181
      ALLOW_ANONYMOUS_LOGIN: 'yes'
    volumes:
      - "~/zk-cluster/zk1/data:/data"
    networks:
      - kafka-network

  zk2:
    container_name: zookeeper2
    image: wurstmeister/zookeeper:latest
    restart: always
    hostname: zk2
    ports:
      - "2182:2181"
    environment:
      ZOO_MY_ID: 2
      ZOO_SERVERS: server.1=zk1:2888:3888;2181 server.2=zk2:2888:3888;2181 server.3=zk3:2888:3888;2181
      ALLOW_ANONYMOUS_LOGIN: 'yes'
    volumes:
      - "~/zk-cluster/zk2/data:/data"
    networks:
      - kafka-network

  zk3:
    container_name: zookeeper3
    image: wurstmeister/zookeeper:latest
    restart: always
    hostname: zk3
    ports:
      - "2183:2181"
    environment:
      ZOO_MY_ID: 3
      ZOO_SERVERS: server.1=zk1:2888:3888;2181 server.2=zk2:2888:3888;2181 server.3=zk3:2888:3888;2181
      ALLOW_ANONYMOUS_LOGIN: 'yes'
    volumes:
      - "~/zk-cluster/zk3/data:/data"
    networks:
      - kafka-network

  kafka1:
    container_name: kafka1
    image: wurstmeister/kafka
    environment:
      KAFKA_ZOOKEEPER_CONNECT: "zk1:2181,zk2:2182,zk3:2183"
      KAFKA_BROKER_ID: '1'
      KAFKA_LISTENERS: 'PLAINTEXT://:29092,PLAINTEXT_HOST://0.0.0.0:9092'
      KAFKA_ADVERTISED_LISTENERS: 'PLAINTEXT://kafka1:29092,PLAINTEXT_HOST://52.78.194.214:9092'
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: 'PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT'
      KAFKA_INTER_BROKER_LISTENER_NAME: 'PLAINTEXT'
      KAFKA_LOG4J_LOGGERS: "kafka.controller=INFO,kafka.producer.async.DefaultEventHandler=INFO,state.change.logger=INFO"
      KAFKA_ADVERTISED_PORT: 9092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 3
    ports:
      - '9092:9092'
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    depends_on:
      - zk1
      - zk2
      - zk3
    restart: unless-stopped
    networks:
      - kafka-network

  kafka2:
    container_name: kafka2
    image: wurstmeister/kafka
    environment:
      KAFKA_ZOOKEEPER_CONNECT: "zk1:2181,zk2:2182,zk3:2183"
      KAFKA_BROKER_ID: 2
      KAFKA_LISTENERS: 'PLAINTEXT://:29093,PLAINTEXT_HOST://0.0.0.0:9093'
      KAFKA_ADVERTISED_LISTENERS: 'PLAINTEXT://kafka2:29093,PLAINTEXT_HOST://52.78.194.214:9093'
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: 'PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT'
      KAFKA_INTER_BROKER_LISTENER_NAME: 'PLAINTEXT'
      KAFKA_LOG4J_LOGGERS: "kafka.controller=INFO,kafka.producer.async.DefaultEventHandler=INFO,state.change.logger=INFO"
      KAFKA_ADVERTISED_PORT: 9092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 3
    ports:
      - '9093:9093'
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    depends_on:
      - zk1
      - zk2
      - zk3
    restart: unless-stopped
    networks:
      - kafka-network

  kafka3:
    container_name: kafka3
    image: wurstmeister/kafka
    environment:
      KAFKA_ZOOKEEPER_CONNECT: "zk1:2181,zk2:2182,zk3:2183"
      KAFKA_BROKER_ID: 3
      KAFKA_LISTENERS: 'PLAINTEXT://:29094,PLAINTEXT_HOST://0.0.0.0:9094'
      KAFKA_ADVERTISED_LISTENERS: 'PLAINTEXT://kafka3:29094,PLAINTEXT_HOST://52.78.194.214:9094'
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: 'PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT'
      KAFKA_INTER_BROKER_LISTENER_NAME: 'PLAINTEXT'
      KAFKA_LOG4J_LOGGERS: "kafka.controller=INFO,kafka.producer.async.DefaultEventHandler=INFO,state.change.logger=INFO"
      KAFKA_ADVERTISED_PORT: 9092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 3
    ports:
      - '9094:9094'
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    depends_on:
      - zk1
      - zk2
      - zk3
    restart: unless-stopped
    networks:
      - kafka-network